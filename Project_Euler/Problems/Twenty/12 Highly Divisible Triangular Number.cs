using System;
using System.Collections.Generic;

/// <summary>
/// Highly Divisible Number
/// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
///
/// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
///
/// Let us list the factors of the first seven triangle numbers:
///
/// 1: 1
/// 3: 1,3
/// 6: 1,2,3,6
/// 10: 1,2,5,10
/// 15: 1,3,5,15
/// 21: 1,3,7,21
/// 28: 1,2,4,7,14,28
/// We can see that 28 is the first triangle number to have over five divisors.
///
/// What is the value of the first triangle number to have over five hundred divisors?
/// </summary>
namespace Project_Euler.Twenty
{
	public class Highly_Divisible_Triangular_Number
	{
		public static void Entry ()
		{
			int solution = 0;
			int triangle = 0;
			int counter = 0;
			Dictionary<int,int> primes = new Dictionary<int,int> ();
			List<int> factors = new List<int> ();
			int temp = 1;

			while (solution == 0) {
				counter++;
				triangle = triangle + counter;
				int factorized = triangle;

				// get the prime factors
				while (factorized != 1) {
					temp++;
					if (factorized % temp == 0) {
						factorized = factorized / temp;
						if (primes.ContainsKey (temp)) {
							primes [temp]++;
						} else {
							primes.Add (temp, 1);
						}
						temp = 1;
					}
				}

				// get all the factors...
				foreach (KeyValuePair<int,int> entry in primes) {
					temp = 1;
					if (!factors.Contains (entry.Key)) {
						factors.Add (entry.Key);
					}
					for (int i = 0; i < entry.Value; i++) {
						temp = temp * entry.Key;

						if (triangle % temp == 0 && !factors.Contains (temp)) {
							factors.Add (temp);
						}

						int temp2 = temp;
						foreach (KeyValuePair<int,int> entry2 in primes) {
							if (entry.Key > entry2.Key) {
								for (int j = 0; j < entry2.Value; j++) {
									temp2 = temp2 * entry2.Key;
								}
							}
						}
					}
				}
			}

			Console.WriteLine ("Solution : {0}", solution);
		}
	}
}

